
public class Main {

	public static void main(String[] args) {
		// top node
		Node fifteen = new Node(15);

		// left side nodes
		Node seven = new Node(7);
		Node six = new Node(6);
		Node twelve = new Node(12);
		Node five = new Node(5);
		Node ten = new Node(10);

		// right side nodes
		Node twenty = new Node(20);
		Node eighteen = new Node(18);
		Node twentyTwo = new Node(22);
		Node sixteen = new Node(16);
		Node nineteen = new Node(19);
		Node twentyFive = new Node(25);

		// setting left side nodes
		fifteen.setLeft(seven);
		seven.setLeft(six);
		seven.setRight(twelve);
		six.setLeft(five);
		twelve.setLeft(ten);

		// setting right side nodes
		fifteen.setRight(twenty);
		twenty.setLeft(eighteen);
		eighteen.setLeft(sixteen);
		eighteen.setRight(nineteen);
		twenty.setRight(twentyTwo);
		twentyTwo.setRight(twentyFive);

		findMaxValue(fifteen);

	}

	public static int findMaxValue(Node node) {
		int max = 0;
		boolean moreNodes = true;
		if (node == null) {
			System.out.println("Node is null");
			return 0;
		}
		while (moreNodes == false) {
			if (node.getRight() != null) {
				max = node.getRight().getValue();
				moreNodes = false;
			} 
			
//			else if (node.getLeft() != null) {
//				max = node.getLeft().getValue();
//				moreNodes = false;
//			}
		}
		System.out.println(max);
		return max;
	}

}
